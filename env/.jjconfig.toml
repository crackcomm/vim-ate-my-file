"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "≈Åukasz Kurowski"
email = "crackcomm@gmail.com"

[ui]
default-command = "sl"
color = "auto"
diff.tool = ["delta"]
paginate = "auto"
diff-editor = ":builtin"

[aliases]
ll = ["log", "-n", "4"]
sl = ["log", "-r", "crit", "--no-pager"]
sq = ["squash"]
s = ["show"]
ops = ["op", "log", "-n", "5"]
d = ["diff", "--git"]
ds = ["diff", "--stat", "--no-pager"]
dt = ["diff", "--tool=delta"]
na = ["new", "-A", "@", "--no-edit"]
nb = ["new", "-B", "@", "--no-edit"]
ne = ["new", "--no-edit"]
sb = ["squash", "--to", "@-"]
si = ["squash", "-i", "--to"]
gc = ["git", "clone", "--colocate"]

"e-" = ["edit", "@-"]
"e+" = ["edit", "@+"]

[revset-aliases]
'chore' = '''
    description(glob:"build(*):*")
  | description(glob:"chore(*):*")
  | description(glob:"deps(*):*")
  | description(glob:"test(*):*")
  | description(glob:"style(*):*")
  | description(glob:"docs(*):*")
  | description(glob:"ci(*):*")
'''

'nochore' = '~chore'

# Source: https://github.com/sunshowers/dotfiles/blob/d89f9fbfa89a1db3bae4a845efddd3159e29c1f1/home/.jjconfig.toml#L20-L35
# We're uninterested in remote branches from origin etc, and their ancestors. But we *are*
# interested in @git remote branches.
#
# What if a commit is present in both @git and a remote branch? In that case we are interested in
# the commit. In the below computation, the commit is present in both `remote_bookmarks()` and
# `git_branches()`, and so it is not part of `uninterested()`. This is the desired behavior.
'git_branches()' = 'remote_bookmarks(remote=exact:"git")'
'uninterested()' = '::(remote_bookmarks() ~ git_branches()) | tags()'
'mine()' = 'author("crackcomm@")'
'interested()' = 'mine() ~ uninterested()'
'open()' = '''
    ancestors(interested(), 2)
  | (immutable_heads() ~ tags() ~ chore)
  | ancestors(@, 2)
'''

'crit' = 'open() | @+'

# https://martinvonz.github.io/jj/v0.11.0/config/#set-of-immutable-commits
'immutable_heads()' = 'tags()'

[template-aliases]
'format_short_id(id)' = 'id.shortest(7)'
'format_timestamp(timestamp)' = 'timestamp.ago()'

[templates]
draft_commit_description = '''
concat(
  description,
  surround(
    "\nJJ: This commit contains the following changes:\n", "",
    indent("JJ:     ", diff.stat(72)),
  ),
  "\nJJ: ignore-rest\n",
  indent("JJ:     ", diff.git()),
)
'''

[colors]
# turn off underline on removed and added tokens
"diff removed token" = { underline = false }
"diff added token" = { underline = false }
